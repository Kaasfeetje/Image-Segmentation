{"version":3,"sources":["reducers/pointReducer.js","reducers/layerReducer.js","reducers/index.js","reducers/navReducer.js","actions/types.js","reducers/colorReducer.js","reducers/imageReducer.js","actions/index.js","components/Dropdown.js","components/HeaderOptions/Help.js","components/HeaderOptions/LayerTable.js","components/HeaderOptions/Layers.js","components/HeaderOptions/UploadImage.js","saveMask.js","components/Header.js","components/FontAwesomeIcons/index.js","components/Canvas/Canvas.js","components/Modal.js","components/Canvas/Color.js","components/Canvas/Sidebar.js","components/Main.js","components/App.js","index.js"],"names":["INITIAL_STATE","points","paths","layers","maskOpacity","combineReducers","nav","state","navIndex","action","type","payload","newPoints","index","point","newPaths","push","splice","newLayers","a","b","length","colors","name","color","id","selectedColor","newColors","images","activeImage","newImages","console","log","nextImage","previousImage","selectNav","reset","connect","ownProps","selected","text","Component","onClick","e","stopPropagation","className","icon","Help","style","marginBottom","moveLayerUp","moveLayerDown","map","el","backgroundColor","minWidth","minHeight","moveUp","moveDown","changeMaskOpacity","opacity","min","max","onChange","target","value","Math","round","imagesLength","addImage","file","setImage","readImage","reader","FileReader","onload","i","Image","obj","result","width","height","src","readAsDataURL","accept","files","createMask","t","document","querySelector","cloneNode","setAttribute","childNodes","forEach","filename","split","saveSvgAsPng","image","ref","useRef","useEffect","onBodyClick","current","contains","body","addEventListener","removeEventListener","UploadImage","Layers","library","add","faSortDown","faSortUp","faArrowUp","faArrowDown","activeColor","amountOfLayers","addPoint","updatePoint","finishPath","addLayer","pathID","deleteLastPoint","panThing","useState","x","y","scale","transform","setTransform","mouseDown","setMouseDown","selectedPoint","setSelectedPoint","panzoom","maxZoom","minZoom","smoothScroll","beforeMouseDown","altKey","zoomTo","moveTo","getXY","rect","getBoundingClientRect","xScale","replace","yScale","clientX","left","clientY","top","renderCircles","key","cx","cy","r","stroke","fill","strokeWidth","onMouseDown","onCirclePressed","onMouseUp","onMouseMove","onMouseMoved","onKeyDown","ctrlKey","keyCode","navigator","platform","match","metaKey","preventDefault","backgroundImage","undefined","getTransform","Modal","title","content","actions","onDismiss","ReactDOM","createPortal","updateColor","selectColor","modalOpen","setModalOpen","pickedColor","setColor","setName","border","padding","htmlFor","placeholder","addColor","renderColors","Main","App","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","render"],"mappings":"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","file":"static/js/main.68e2e2aa.chunk.js","sourcesContent":["import {\r\n    ADD_POINT,\r\n    DELETE_LAST_POINT,\r\n    FINISH_PATH,\r\n    NEXT_IMAGE,\r\n    PREVIOUS_IMAGE,\r\n    RESET,\r\n    SET_IMAGE,\r\n    UPDATE_POINT,\r\n} from \"../actions/types\";\r\n\r\nconst INITIAL_STATE = { points: [], paths: [] };\r\n\r\nexport default (state = INITIAL_STATE, action) => {\r\n    let newPoints;\r\n    switch (action.type) {\r\n        case ADD_POINT:\r\n            return { ...state, points: [...state.points, action.payload] };\r\n        case UPDATE_POINT:\r\n            newPoints = [...state.points];\r\n            newPoints[action.payload.index] = action.payload.point;\r\n            return { ...state, points: newPoints };\r\n        case FINISH_PATH:\r\n            const newPaths = [...state.paths];\r\n            newPaths.push(state.points);\r\n            return { ...state, points: [], paths: newPaths };\r\n        case DELETE_LAST_POINT:\r\n            newPoints = [...state.points];\r\n            newPoints.splice(-1, 1);\r\n            return { ...state, points: newPoints };\r\n        case NEXT_IMAGE:\r\n        case PREVIOUS_IMAGE:\r\n        case SET_IMAGE:\r\n        case RESET:\r\n            return INITIAL_STATE;\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import {\r\n    ADD_LAYER,\r\n    CHANGE_MASK_OPACITY,\r\n    MOVE_LAYER_DOWN,\r\n    MOVE_LAYER_UP,\r\n    NEXT_IMAGE,\r\n    PREVIOUS_IMAGE,\r\n    RESET,\r\n    SET_IMAGE,\r\n} from \"../actions/types\";\r\n\r\nconst INITIAL_STATE = { layers: [], maskOpacity: 1.0 };\r\n\r\nexport default (state = INITIAL_STATE, action) => {\r\n    let newLayers;\r\n    switch (action.type) {\r\n        case ADD_LAYER:\r\n            return { ...state, layers: [...state.layers, action.payload] };\r\n        case CHANGE_MASK_OPACITY:\r\n            return {\r\n                ...state,\r\n                maskOpacity: action.payload / 100.0,\r\n            };\r\n        case MOVE_LAYER_UP:\r\n            newLayers = [...state.layers];\r\n            if (action.payload - 1 >= 0) {\r\n                const a = newLayers[action.payload];\r\n                const b = newLayers[action.payload - 1];\r\n                newLayers[action.payload] = b;\r\n                newLayers[action.payload - 1] = a;\r\n            }\r\n            return { ...state, layers: newLayers };\r\n        case MOVE_LAYER_DOWN:\r\n            newLayers = [...state.layers];\r\n            if (action.payload + 1 < newLayers.length) {\r\n                const a = newLayers[action.payload];\r\n                const b = newLayers[action.payload + 1];\r\n                newLayers[action.payload] = b;\r\n                newLayers[action.payload + 1] = a;\r\n            }\r\n            return { ...state, layers: newLayers };\r\n        case RESET:\r\n        case NEXT_IMAGE:\r\n        case PREVIOUS_IMAGE:\r\n        case SET_IMAGE:\r\n            return INITIAL_STATE;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport navReducer from \"./navReducer\";\r\nimport pointReducer from \"./pointReducer\";\r\nimport colorReducer from \"./colorReducer\";\r\nimport layerReducer from \"./layerReducer\";\r\nimport imageReducer from \"./imageReducer\";\r\n\r\nexport default combineReducers({\r\n    nav: navReducer,\r\n    points: pointReducer,\r\n    layers: layerReducer,\r\n    colors: colorReducer,\r\n    images: imageReducer,\r\n});\r\n","import { SELECT_NAV } from \"../actions/types\";\r\n\r\nexport default (state = { navIndex: null }, action) => {\r\n    switch (action.type) {\r\n        case SELECT_NAV:\r\n            return { ...state, navIndex: action.payload };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","export const SELECT_NAV = \"SELECT_NAV\";\r\nexport const ADD_POINT = \"ADD_POINT\";\r\nexport const UPDATE_POINT = \"UPDATE_POINT\";\r\nexport const DELETE_LAST_POINT = \"DELETE_LAST_POINT\";\r\nexport const FINISH_PATH = \"FINISHED_PATH\";\r\n\r\nexport const ADD_COLOR = \"ADD_COLOR\";\r\nexport const UPDATE_COLOR = \"UPDATE_COLOR\";\r\nexport const SELECT_COLOR = \"SELECT_COLOR\";\r\n\r\nexport const ADD_LAYER = \"ADD_LAYER\";\r\nexport const CHANGE_MASK_OPACITY = \"CHANGE_MASK_OPACITY\";\r\nexport const MOVE_LAYER_DOWN = \"MOVE_LAYER_DOWN\";\r\nexport const MOVE_LAYER_UP = \"MOVE_LAYER_UP\";\r\n\r\nexport const ADD_IMAGE = \"ADD_IMAGE\";\r\nexport const SET_IMAGE = \"SET_IMAGE\";\r\nexport const NEXT_IMAGE = \"NEXT_IMAGE\";\r\nexport const PREVIOUS_IMAGE = \"PREVIOUS_IMAGE\";\r\n\r\nexport const RESET = \"RESET\";\r\n","import { ADD_COLOR, SELECT_COLOR, UPDATE_COLOR } from \"../actions/types\";\r\n\r\nexport default (\r\n    state = {\r\n        colors: [{ name: \"Background Class\", color: \"#000\", id: 0 }],\r\n        selectedColor: 0,\r\n    },\r\n    action\r\n) => {\r\n    switch (action.type) {\r\n        case ADD_COLOR:\r\n            return {\r\n                ...state,\r\n                colors: [\r\n                    ...state.colors,\r\n                    {\r\n                        name: \"Temporary name\",\r\n                        color: \"#000\",\r\n                        id: action.payload.id,\r\n                    },\r\n                ],\r\n            };\r\n        case UPDATE_COLOR:\r\n            const newColors = [...state.colors];\r\n            newColors[action.payload.id] = action.payload.color;\r\n            return { ...state, colors: newColors };\r\n        case SELECT_COLOR:\r\n            return { ...state, selectedColor: action.payload };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import {\r\n    ADD_IMAGE,\r\n    NEXT_IMAGE,\r\n    PREVIOUS_IMAGE,\r\n    SET_IMAGE,\r\n} from \"../actions/types\";\r\n\r\nexport default (state = { images: [], activeImage: 0 }, action) => {\r\n    switch (action.type) {\r\n        case ADD_IMAGE:\r\n            const newImages = [...state.images];\r\n            console.log(action.payload);\r\n            newImages.push(action.payload);\r\n            return { ...state, images: newImages };\r\n        case SET_IMAGE:\r\n            return { ...state, activeImage: action.payload };\r\n        case NEXT_IMAGE:\r\n            const nextImage =\r\n                state.activeImage + 1 <= state.images.length\r\n                    ? state.activeImage + 1\r\n                    : state.activeImage;\r\n            return { ...state, activeImage: nextImage };\r\n        case PREVIOUS_IMAGE:\r\n            const previousImage =\r\n                state.activeImage - 1 >= 0\r\n                    ? state.activeImage - 1\r\n                    : state.activeImage;\r\n            return { ...state, activeImage: previousImage };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import {\r\n    ADD_COLOR,\r\n    ADD_IMAGE,\r\n    ADD_LAYER,\r\n    ADD_POINT,\r\n    CHANGE_MASK_OPACITY,\r\n    DELETE_LAST_POINT,\r\n    FINISH_PATH,\r\n    MOVE_LAYER_DOWN,\r\n    MOVE_LAYER_UP,\r\n    NEXT_IMAGE,\r\n    PREVIOUS_IMAGE,\r\n    RESET,\r\n    SELECT_COLOR,\r\n    SELECT_NAV,\r\n    SET_IMAGE,\r\n    UPDATE_COLOR,\r\n    UPDATE_POINT,\r\n} from \"../actions/types\";\r\n\r\nexport const selectNav = (id) => {\r\n    return {\r\n        type: SELECT_NAV,\r\n        payload: id,\r\n    };\r\n};\r\n\r\nexport const addPoint = (point) => {\r\n    return {\r\n        type: ADD_POINT,\r\n        payload: point,\r\n    };\r\n};\r\n\r\nexport const updatePoint = (point, index) => {\r\n    return {\r\n        type: UPDATE_POINT,\r\n        payload: { point, index },\r\n    };\r\n};\r\n\r\nexport const deleteLastPoint = () => {\r\n    return {\r\n        type: DELETE_LAST_POINT,\r\n    };\r\n};\r\n\r\nexport const finishPath = () => {\r\n    return {\r\n        type: FINISH_PATH,\r\n    };\r\n};\r\n\r\nexport const addColor = (id) => {\r\n    return {\r\n        type: ADD_COLOR,\r\n        payload: { id },\r\n    };\r\n};\r\n\r\nexport const updateColor = (id, name, color) => {\r\n    return {\r\n        type: UPDATE_COLOR,\r\n        payload: { id, color: { id, name, color } },\r\n    };\r\n};\r\n\r\nexport const selectColor = (id) => {\r\n    return {\r\n        type: SELECT_COLOR,\r\n        payload: id,\r\n    };\r\n};\r\n\r\nexport const addLayer = (color, pathID) => {\r\n    const obj = { ...color, id: pathID };\r\n\r\n    return {\r\n        type: ADD_LAYER,\r\n        payload: obj,\r\n    };\r\n};\r\n\r\nexport const changeMaskOpacity = (opacity) => {\r\n    return {\r\n        type: CHANGE_MASK_OPACITY,\r\n        payload: opacity,\r\n    };\r\n};\r\n\r\nexport const moveLayerUp = (id) => {\r\n    return {\r\n        type: MOVE_LAYER_UP,\r\n        payload: id,\r\n    };\r\n};\r\n\r\nexport const moveLayerDown = (id) => {\r\n    return {\r\n        type: MOVE_LAYER_DOWN,\r\n        payload: id,\r\n    };\r\n};\r\n\r\nexport const addImage = (file) => {\r\n    return {\r\n        type: ADD_IMAGE,\r\n        payload: file,\r\n    };\r\n};\r\n\r\nexport const setImage = (index) => {\r\n    return {\r\n        type: SET_IMAGE,\r\n        payload: index,\r\n    };\r\n};\r\n\r\nexport const nextImage = () => {\r\n    return {\r\n        type: NEXT_IMAGE,\r\n    };\r\n};\r\n\r\nexport const previousImage = () => {\r\n    return {\r\n        type: PREVIOUS_IMAGE,\r\n    };\r\n};\r\n\r\nexport const reset = () => {\r\n    return {\r\n        type: RESET,\r\n    };\r\n};\r\n","import React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { selectNav } from \"../actions\";\r\nfunction Dropdown({ text, Component, selectNav, selected, id }) {\r\n    const onClick = () => {\r\n        if (selected) return selectNav(null);\r\n        selectNav(id);\r\n    };\r\n\r\n    return (\r\n        <div onClick={(e) => e.stopPropagation()}>\r\n            <button onClick={onClick} className=\"header--option\">\r\n                {text}\r\n                <FontAwesomeIcon\r\n                    className=\"header--option-icon\"\r\n                    icon=\"sort-down\"\r\n                />\r\n            </button>\r\n            {selected && <Component />}\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return { selected: state.nav.navIndex === ownProps.id };\r\n};\r\n\r\nexport default connect(mapStateToProps, { selectNav })(Dropdown);\r\n","//import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React from \"react\";\r\n\r\nimport \"../../css/HeaderOptions/Help.css\";\r\nfunction Help() {\r\n    return (\r\n        <div className=\"help\">\r\n            <h3>Controls</h3>\r\n            <hr />\r\n            <div className=\"help-list\">\r\n                <ul>\r\n                    <li id=\"help-header\">\r\n                        <span>Key</span>\r\n                        <span>Action</span>\r\n                    </li>\r\n                    <li>\r\n                        <span>Scroll</span>\r\n                        <span>Zoom</span>\r\n                    </li>\r\n                    <li>\r\n                        <span>Left Click</span>\r\n                        <span>Place Point</span>\r\n                    </li>\r\n                    <li>\r\n                        <span>Alt+Left Click</span> <span>Pan</span>\r\n                    </li>\r\n                    <li>\r\n                        <span>A</span>\r\n                        <span>Previous Image</span>\r\n                    </li>\r\n                    <li>\r\n                        <span>D</span>\r\n                        <span>Next Image Image</span>\r\n                    </li>\r\n                    <li>\r\n                        <span>Ctrl+Z</span> <span>undo</span>\r\n                    </li>\r\n                    {/* <li>\r\n                        <span>\r\n                            <FontAwesomeIcon icon=\"arrow-up\" />\r\n                            <FontAwesomeIcon icon=\"arrow-down\" />\r\n                        </span>\r\n                        <span>Increment Opacity</span>\r\n                    </li>\r\n                    <li>\r\n                        <span>,</span>\r\n                        <span>Toggle all layer visibility</span>\r\n                    </li>\r\n                    <li>\r\n                        <span>[</span>{\" \"}\r\n                        <span>Toggle control point visibility</span>\r\n                    </li>\r\n                    <li>\r\n                        <span>0</span>\r\n                        <span>Reset pan and zoom levels</span>\r\n                    </li>\r\n                    <li>\r\n                        <span>Alt + Click</span>\r\n                        <span>Delete Layer</span>\r\n                    </li> */}\r\n                </ul>\r\n            </div>\r\n            <h3>How to use</h3>\r\n            <p style={{ marginBottom: \"1rem\" }}>\r\n                Use left click to add a point. Use alt left click to pan around.\r\n                Use scrollwheel to zoom in and out. Use Ctrl + Z to undo the\r\n                last added point. Move layers up and down in the layers\r\n                dropdown.\r\n            </p>\r\n            <p>Version: 0.1.0</p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Help;\r\n","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { moveLayerUp, moveLayerDown } from \"../../actions\";\r\n\r\nimport \"../../css/HeaderOptions/LayerTable.css\";\r\nfunction LayerTable({ layers, moveLayerUp, moveLayerDown }) {\r\n    const moveDown = (index) => {\r\n        console.log(\"DOWN\");\r\n        moveLayerDown(index);\r\n    };\r\n\r\n    const moveUp = (index) => {\r\n        console.log(\"UP\");\r\n        moveLayerUp(index);\r\n    };\r\n\r\n    const renderLayers = () => {\r\n        return layers.map((el, index) => (\r\n            <div className=\"table-row\">\r\n                <p>{index}</p>\r\n                <div\r\n                    style={{\r\n                        backgroundColor: `${el.color}`,\r\n                        minWidth: \"15px\",\r\n                        minHeight: \"15px\",\r\n                    }}\r\n                ></div>\r\n                <p>{el.name}</p>\r\n                <div className=\"table-updown\">\r\n                    <FontAwesomeIcon\r\n                        onClick={() => moveUp(index)}\r\n                        className=\"table-up\"\r\n                        icon=\"sort-up\"\r\n                    />\r\n                    <FontAwesomeIcon\r\n                        onClick={() => moveDown(index)}\r\n                        className=\"table-down\"\r\n                        icon=\"sort-down\"\r\n                    />\r\n                </div>\r\n                <button className=\"table-button\">X</button>\r\n            </div>\r\n        ));\r\n    };\r\n\r\n    return (\r\n        <div className=\"table\">\r\n            <div className=\" table-header table-row\">\r\n                <p>Layer</p>\r\n                <p>Color</p>\r\n                <p>Layer Name</p>\r\n                <p>Up/down</p>\r\n                <p>Delete</p>\r\n            </div>\r\n            {renderLayers()}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default connect(null, { moveLayerUp, moveLayerDown })(LayerTable);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { changeMaskOpacity, reset } from \"../../actions\";\r\nimport \"../../css/HeaderOptions/Layers.css\";\r\nimport LayerTable from \"./LayerTable\";\r\nfunction Layers({ layers, maskOpacity, changeMaskOpacity, reset }) {\r\n    return (\r\n        <div className=\"layers\">\r\n            <div className=\"layers-head\">\r\n                <div className=\"layers-head--mask\">\r\n                    <p>Mask Opacity</p>\r\n                    <input\r\n                        type=\"number\"\r\n                        min={0}\r\n                        max={100}\r\n                        onChange={(e) => changeMaskOpacity(e.target.value)}\r\n                        value={Math.round(maskOpacity * 100)}\r\n                    ></input>\r\n                </div>\r\n                <div className=\"layers-head--button\">\r\n                    <button\r\n                        onClick={() => reset()}\r\n                        className=\"header--option header--option-dangerous\"\r\n                    >\r\n                        Clear All Layers\r\n                    </button>\r\n                </div>\r\n            </div>\r\n            <div className=\"layers-content\">\r\n                {layers.length !== 0 ? (\r\n                    <LayerTable layers={layers} />\r\n                ) : (\r\n                    <p>No Layers Yet</p>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        layers: state.layers.layers,\r\n        maskOpacity: state.layers.maskOpacity,\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, { changeMaskOpacity, reset })(Layers);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { addImage, setImage } from \"../../actions\";\r\nimport \"../../css/HeaderOptions/UploadImage.css\";\r\nfunction UploadImage({ imagesLength, addImage, setImage }) {\r\n    const onUpload = (e) => {\r\n        readImage(e.target.files[0]);\r\n    };\r\n\r\n    // const onUploadMultiple = (e) => {\r\n    //     Object.values(e.target.files).forEach((el) => readImage(el));\r\n    // };\r\n\r\n    const readImage = (file) => {\r\n        const reader = new FileReader();\r\n        reader.onload = (function (aImg) {\r\n            return function (e) {\r\n                let i = new Image();\r\n                i.onload = function () {\r\n                    const obj = {\r\n                        file: e.target.result,\r\n                        width: i.width,\r\n                        height: i.height,\r\n                        name: file.name,\r\n                    };\r\n                    addImage(obj);\r\n                    setImage(imagesLength);\r\n                };\r\n                i.src = e.target.result;\r\n            };\r\n        })();\r\n        reader.readAsDataURL(file);\r\n    };\r\n\r\n    return (\r\n        <div className=\"upload-image\">\r\n            <h3 className=\"upload-image--header\">Upload Image</h3>\r\n            <input type=\"file\" accept=\"image/*\" onChange={onUpload}></input>\r\n\r\n            {/* <h3 className=\"upload-image--header\">Upload Multiple</h3>\r\n            <input\r\n                type=\"file\"\r\n                accept=\"image/*\"\r\n                // webkitdirectory\r\n                // directory\r\n                multiple\r\n                onChange={onUploadMultiple}\r\n            ></input> */}\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return { imagesLength: state.images.images.length };\r\n};\r\n\r\nexport default connect(mapStateToProps, { addImage, setImage })(UploadImage);\r\n","import { saveSvgAsPng } from \"save-svg-as-png\";\r\n// export const saveMask = (image) => {\r\n//     let tempATag = document.createElement(\"a\");\r\n//     tempATag.href = image.file;\r\n//     const splitName = image.name.split(\".\");\r\n//     tempATag.download = `${splitName[0]}-mask.${splitName[1]}`;\r\n//     document.body.appendChild(tempATag);\r\n//     tempATag.click();\r\n//     document.body.removeChild(tempATag);\r\n// };\r\n\r\nexport const createMask = (name) => {\r\n    const t = document.querySelector(\"#image\").cloneNode(true);\r\n    t.setAttribute(\"style\", \"backgroundImage:none\");\r\n    t.childNodes.forEach((el) => (el.style.opacity = 1));\r\n    const filename = `${name.split(\".\")[0]}-mask.png`;\r\n    saveSvgAsPng(t, filename);\r\n};\r\n","import React, { useEffect, useRef } from \"react\";\r\nimport \"../css/Header.css\";\r\nimport Dropdown from \"./Dropdown\";\r\n//import Advanced from \"./HeaderOptions/Advanced\";\r\nimport Help from \"./HeaderOptions/Help\";\r\nimport Layers from \"./HeaderOptions/Layers\";\r\nimport UploadImage from \"./HeaderOptions/UploadImage\";\r\nimport { selectNav, reset } from \"../actions\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { createMask } from \"../saveMask\";\r\n\r\nfunction Header({ image, selectNav, reset }) {\r\n    const ref = useRef();\r\n\r\n    useEffect(() => {\r\n        const onBodyClick = (e) => {\r\n            if (ref.current.contains(e.target)) {\r\n                return;\r\n            }\r\n            selectNav(null);\r\n        };\r\n        document.body.addEventListener(\"click\", onBodyClick);\r\n\r\n        return () => {\r\n            document.body.removeEventListener(\"click\", onBodyClick);\r\n        };\r\n    });\r\n\r\n    return (\r\n        <div className=\"header\">\r\n            <div className=\"header--logo\">Image Segmentation</div>\r\n            <div ref={ref} className=\"header--options\">\r\n                <Dropdown\r\n                    text=\"Upload Image\"\r\n                    selected={false}\r\n                    Component={UploadImage}\r\n                    id={0}\r\n                />\r\n                <Dropdown\r\n                    text=\"Layers\"\r\n                    selected={false}\r\n                    Component={Layers}\r\n                    id={1}\r\n                />\r\n                {/* <Dropdown\r\n                    text=\"Advanced\"\r\n                    selected={false}\r\n                    Component={Advanced}\r\n                    id={2}\r\n                /> */}\r\n                <Dropdown\r\n                    text=\"Help\"\r\n                    selected={false}\r\n                    Component={Help}\r\n                    id={3}\r\n                />\r\n                <div>\r\n                    <button\r\n                        className=\"header--option\"\r\n                        onClick={() =>\r\n                            createMask(image ? image.name : \"mask.png\")\r\n                        }\r\n                    >\r\n                        Save\r\n                    </button>\r\n                </div>\r\n                <div>\r\n                    <button\r\n                        onClick={() => reset()}\r\n                        className=\"header--option header--option-dangerous\"\r\n                    >\r\n                        Reset\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return { image: state.images.images[state.images.activeImage] };\r\n};\r\n\r\nexport default connect(mapStateToProps, { selectNav, reset })(Header);\r\n","import { library } from \"@fortawesome/fontawesome-svg-core\";\r\nimport {\r\n    faSortDown,\r\n    faSortUp,\r\n    faArrowUp,\r\n    faArrowDown,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nlibrary.add(faSortDown, faSortUp, faArrowUp, faArrowDown);\r\n","import panzoom from \"panzoom\";\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n    addPoint,\r\n    updatePoint,\r\n    finishPath,\r\n    addLayer,\r\n    deleteLastPoint,\r\n    nextImage,\r\n    previousImage,\r\n} from \"../../actions\";\r\n\r\nimport { createMask } from \"../../saveMask\";\r\n\r\nfunction Canvas({\r\n    points,\r\n    layers,\r\n    paths,\r\n    activeColor,\r\n    amountOfLayers,\r\n    image,\r\n    maskOpacity,\r\n    addLayer,\r\n    updatePoint,\r\n    deleteLastPoint,\r\n    finishPath,\r\n    addPoint,\r\n    nextImage,\r\n    previousImage,\r\n}) {\r\n    const [transform, setTransform] = useState({ x: 0, y: 0, scale: 1 });\r\n    const [mouseDown, setMouseDown] = useState(false);\r\n    const [selectedPoint, setSelectedPoint] = useState(null);\r\n\r\n    const ref = useRef();\r\n\r\n    let panThing;\r\n    useEffect(() => {\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        panThing = panzoom(document.querySelector(\"#image\"), {\r\n            maxZoom: 20,\r\n            minZoom: 0.1,\r\n            smoothScroll: false,\r\n            beforeMouseDown: function (e) {\r\n                var shouldIgnore = !e.altKey;\r\n                return shouldIgnore;\r\n            },\r\n        });\r\n        panThing.zoomTo(transform.x, transform.y, transform.scale);\r\n        panThing.moveTo(transform.x, transform.y);\r\n    }, [points]);\r\n\r\n    const onKeyDown = (e) => {\r\n        if (e.key === \"Enter\") {\r\n            addLayer(activeColor, amountOfLayers);\r\n            finishPath();\r\n        }\r\n        if (e.ctrlKey) {\r\n            if (e.key === \"z\") {\r\n                deleteLastPoint();\r\n            }\r\n        }\r\n        if (e.key === \"d\") {\r\n            nextImage();\r\n        }\r\n        if (e.key === \"a\") {\r\n            previousImage();\r\n        }\r\n        if (\r\n            // eslint-disable-next-line eqeqeq\r\n            e.keyCode == 83 &&\r\n            (navigator.platform.match(\"Mac\") ? e.metaKey : e.ctrlKey)\r\n        ) {\r\n            e.preventDefault();\r\n            createMask(image ? image.name : \"mask.png\");\r\n        }\r\n    };\r\n\r\n    const getXY = (e) => {\r\n        let rect = ref.current.getBoundingClientRect();\r\n        const transform = ref.current.style.transform.split(\",\");\r\n\r\n        let xScale = transform[0].replace(\"matrix(\", \"\");\r\n        let yScale = transform[3];\r\n\r\n        let x = (e.clientX - rect.left) / xScale;\r\n        let y = (e.clientY - rect.top) / yScale;\r\n\r\n        return { x, y };\r\n    };\r\n\r\n    const onClick = (e) => {\r\n        if (e.altKey) return;\r\n        let { x, y } = getXY(e);\r\n        console.log(`${x},${y}`);\r\n        if (panThing) setTransform(panThing.getTransform());\r\n\r\n        addPoint(`${x},${y}`);\r\n    };\r\n\r\n    const onCirclePressed = (e, i) => {\r\n        if (e.altKey) return;\r\n        setMouseDown(true);\r\n        let { x, y } = getXY(e);\r\n        updatePoint(`${x},${y}`, i);\r\n        setSelectedPoint(i);\r\n        e.stopPropagation();\r\n    };\r\n\r\n    const onMouseMoved = (e, i) => {\r\n        if (mouseDown) {\r\n            if (e.altKey) return;\r\n            let { x, y } = getXY(e);\r\n            updatePoint(`${x},${y}`, i);\r\n            e.stopPropagation();\r\n        }\r\n    };\r\n\r\n    const renderCircles = points.map((el, i) => (\r\n        <circle\r\n            key={el}\r\n            cx={el.split(\",\")[0]}\r\n            cy={el.split(\",\")[1]}\r\n            r=\"5\"\r\n            stroke=\"black\"\r\n            fill=\"red\"\r\n            strokeWidth=\"2\"\r\n            onClick={(e) => e.stopPropagation()}\r\n            onMouseDown={(e) => onCirclePressed(e, i)}\r\n        ></circle>\r\n    ));\r\n\r\n    const renderPaths = () => {\r\n        return layers.map((el) => (\r\n            <polygon\r\n                key={el.id}\r\n                points={paths[el.id]}\r\n                style={{\r\n                    stroke: \"none\",\r\n                    fill: `${el.color}`,\r\n                    opacity: maskOpacity,\r\n                }}\r\n            ></polygon>\r\n        ));\r\n    };\r\n\r\n    return (\r\n        <div\r\n            className=\"canvas\"\r\n            onMouseUp={(e) => setMouseDown(false)}\r\n            onMouseMove={(e) => onMouseMoved(e, selectedPoint)}\r\n            onKeyDown={(e) => onKeyDown(e)}\r\n        >\r\n            <svg\r\n                ref={ref}\r\n                style={{\r\n                    backgroundImage:\r\n                        image === undefined\r\n                            ? `url(logo512.png)`\r\n                            : `url(${image.file})`,\r\n                }}\r\n                onClick={onClick}\r\n                id=\"image\"\r\n                width={image === undefined ? \"512\" : image.width}\r\n                height={image === undefined ? \"512\" : image.height}\r\n            >\r\n                <polyline\r\n                    points={points}\r\n                    strokeWidth=\"3\"\r\n                    style={{ stroke: \"white\", fill: \"none\" }}\r\n                />\r\n                {renderCircles}\r\n                {renderPaths()}\r\n            </svg>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        points: state.points.points,\r\n        paths: state.points.paths,\r\n        layers: state.layers.layers,\r\n        activeColor: state.colors.colors[state.colors.selectedColor],\r\n        amountOfLayers: state.layers.layers.length,\r\n        image: state.images.images[state.images.activeImage],\r\n        maskOpacity: state.layers.maskOpacity,\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n    addPoint,\r\n    updatePoint,\r\n    finishPath,\r\n    addLayer,\r\n    deleteLastPoint,\r\n    nextImage,\r\n    previousImage,\r\n})(Canvas);\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport \"../css/Modal.css\";\r\nfunction Modal({ title, content, actions, onDismiss }) {\r\n    return ReactDOM.createPortal(\r\n        <div onClick={onDismiss} className=\"modal\">\r\n            <div onClick={(e) => e.stopPropagation()} className=\"modal-content\">\r\n                <div className=\"modal-header\">{title}</div>\r\n                <div className=\" modal-contentbox\">{content}</div>\r\n                <div className=\" modal-actions\">{actions}</div>\r\n            </div>\r\n        </div>,\r\n        document.querySelector(\"#modal\")\r\n    );\r\n}\r\n\r\nexport default Modal;\r\n","import React, { useState } from \"react\";\r\nimport Modal from \"../Modal\";\r\n\r\nimport { updateColor, selectColor } from \"../../actions\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport \"../../css/Layer.css\";\r\nfunction Color({ color, selectedColor, selectColor, updateColor }) {\r\n    const [modalOpen, setModalOpen] = useState(false);\r\n    const [pickedColor, setColor] = useState(color.color);\r\n    const [name, setName] = useState(color.name);\r\n\r\n    const onSave = (e) => {\r\n        updateColor(\r\n            color.id,\r\n            // eslint-disable-next-line eqeqeq\r\n            name == \"\" ? color.name : name,\r\n            // eslint-disable-next-line eqeqeq\r\n            pickedColor == undefined ? color.color : pickedColor\r\n        );\r\n        setModalOpen(false);\r\n    };\r\n\r\n    const onClick = (e) => {\r\n        if (selectedColor === color.id) {\r\n            setModalOpen(true);\r\n        } else {\r\n            selectColor(color.id);\r\n        }\r\n    };\r\n    \r\n    return (\r\n        <>\r\n            <button\r\n                style={{\r\n                    backgroundColor: color.color,\r\n                    color: \"white\",\r\n                    border:\r\n                        selectedColor !== color.id\r\n                            ? \"none\"\r\n                            : \"2px dotted green\",\r\n                    padding: \"1rem\",\r\n                }}\r\n                className=\"layer\"\r\n                onClick={onClick}\r\n            >\r\n                {color.name}\r\n            </button>\r\n            {modalOpen === true && (\r\n                <Modal\r\n                    title=\"Pick A Color\"\r\n                    content={\r\n                        <>\r\n                            <div className=\"modal-form-item\">\r\n                                <label htmlFor=\"name\">Name: </label>\r\n                                <input\r\n                                    onChange={(e) => setName(e.target.value)}\r\n                                    placeholder={name}\r\n                                    id=\"name\"\r\n                                    type=\"text\"\r\n                                ></input>\r\n                            </div>\r\n                            <div className=\"modal-form-item\">\r\n                                <label htmlFor=\"color\">Colorpicker: </label>\r\n                                <input\r\n                                    onChange={(e) => setColor(e.target.value)}\r\n                                    placeholder={pickedColor}\r\n                                    id=\"color\"\r\n                                    type=\"color\"\r\n                                ></input>\r\n                            </div>\r\n                        </>\r\n                    }\r\n                    actions={\r\n                        <>\r\n                            <button\r\n                                onClick={() => setModalOpen(false)}\r\n                                className=\"modal-button modal-button-negative\"\r\n                            >\r\n                                Close\r\n                            </button>\r\n                            <button\r\n                                onClick={onSave}\r\n                                className=\"modal-button modal-button-positive\"\r\n                            >\r\n                                Save\r\n                            </button>\r\n                        </>\r\n                    }\r\n                    onDismiss={() => setModalOpen(false)}\r\n                />\r\n            )}\r\n        </>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return { selectedColor: state.colors.selectedColor };\r\n};\r\n\r\nexport default connect(mapStateToProps, { updateColor, selectColor})(Color);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { addColor } from \"../../actions\";\r\nimport Color from \"./Color\";\r\n\r\nfunction Sidebar({ colors = [], addColor }) {\r\n    const onAddButton = () => {\r\n        addColor(colors.length);\r\n    };\r\n\r\n    const renderColors = colors.map((el) => <Color key={el.id} color={el} />);\r\n    return (\r\n        <ul className=\"main-sidebar\">\r\n            {renderColors}\r\n            <button onClick={onAddButton}>Add Class</button>\r\n        </ul>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return { colors: state.colors.colors };\r\n};\r\n\r\nexport default connect(mapStateToProps, { addColor })(Sidebar);\r\n","import React from \"react\";\r\n\r\nimport \"../css/Main.css\";\r\nimport Canvas from \"./Canvas/Canvas\";\r\nimport Sidebar from \"./Canvas/Sidebar\";\r\nfunction Main() {\r\n    return (\r\n        <div className=\"main\">\r\n            <Sidebar />\r\n            <Canvas />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Main;\r\n","import React from \"react\";\r\nimport Header from \"./Header\";\r\nimport \"./FontAwesomeIcons/index\";\r\n\r\nimport \"../css/App.css\";\r\nimport Main from \"./Main\";\r\n\r\nfunction App() {\r\n    return (\r\n        <div className=\"app\">\r\n            <Header />\r\n            <Main />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { createStore, compose } from \"redux\";\r\nimport reducers from \"./reducers\";\r\nimport App from \"./components/App\";\r\nimport { Provider } from \"react-redux\";\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers());\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <App />\r\n    </Provider>,\r\n    document.querySelector(\"#root\")\r\n);\r\n"],"sourceRoot":""}